
 web app: splurty 4
1. getting started 
2. building the homepage 
3. adding design 
- 7: Bootstrap 
- 8: Top navigation bar 
- 9: Styling the topnav 
- 10: Use custom fonts 
- 11: Add a footer 
4. finishing the functionality 
5. finishing touches 
6. deploying to production 
 assignments 2
 videos
Toggle navigation
Notification Bell 1 User Avatar  

Lesson 11: Adding a Footer
In the previous lessons, we've built the foundations of our application and improved some of the fonts. In this lesson, we'll add a footer to the application and adjust how it looks.


When we look back to our wireframes we can see that we want to have a footer on our pages.

Splurty Homepage
splurty homepage
Before you start building the footer ourselves, let's take a look in the Bootstrap documentation and find the "Sticky Footer" example.A sticky footer always sticks to the bottom part of the page no matter how much content is on the page.

If you open the Bootstrap page with the Google Chrome web browser (the best web browser for web development), you can actually look at all the HTML and CSS code straight inside of your browser. Right-click the Sticky Footer page and click View Source. This brings up the HTML for this particular page. So if you look at the example of this Sticky Footer page with the goal of applying the same footer to your page, you can see that the main content of the page is wrapped in a div with the class container, and the footer section is wrapped in a div with the class footer.

This sounds right, so let's apply these changes to app/views/layouts/application.html.erb:

<!DOCTYPE html>
<html>
  <head>
    <title>Splurty</title>
    <%= csrf_meta_tags %>
    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
  </head>
  <body>
    <header class="row">
      <div class="col-3">
        <div class="circle">
          <br />
          You know
          <br />
          you need
          <br />
          to code
        </div>
      </div>
      <div class="col-4 slogan">
        Splurting out unsolicited advice about entrepreneurship since 2016
      </div>
      <div class="col-5 links">
        <%= link_to 'Contribute', '#' %>
        <%= link_to 'About', '#' %>
      </div>
    </header>
    <hr />
    <br class="clear" />

    <div class="container">
      <%= yield %>
    </div>

    <div class="footer">
      <div class="container">
        <div class="row">
          <p class="text-muted">Place sticky footer content here.</p>
        </div>
      </div>
    </div>

  </body>
</html> 
 
 
 
 
 
 
 
 
 
Save the file and refresh. Cool, it added the footer, but it's not sticky.

In the source of the HTML document, we see the "Sticky Footer" page linking to this file: sticky-footer.css. This sounds like the file where we can find the CSS styles we need to add to our page.

Looking at the sticky-footer.css file, it seems that the CSS code is split into two sections. One is a "Sticky footer style" section and one is a "Custom page CSS (not required for template or sticky footer method)."

Let's take the top part and put it in a new file inside app/assets/stylesheets; name the file footer.scss.

/* Sticky footer styles
-------------------------------------------------- */
html {
  position: relative;
  min-height: 100%;
}
body {
  /* Margin bottom by footer height */
  margin-bottom: 60px;
}
.footer {
  position: absolute;
  bottom: 0;
  width: 100%;
  /* Set the fixed height of the footer here */
  height: 60px;

}